==4840== Memcheck, a memory error detector
==4840== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4840== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==4840== Command: ./so-cpp _test/inputs/test5.in
==4840== Parent PID: 4833
==4840== 
==4840== Conditional jump or move depends on uninitialised value(s)
==4840==    at 0x1096D2: parse_arguments (helpers.c:83)
==4840==    by 0x108C38: main (main.c:10)
==4840== 
==4840== Invalid write of size 1
==4840==    at 0x4C32E0D: strcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4840==    by 0x109751: parse_arguments (helpers.c:89)
==4840==    by 0x108C38: main (main.c:10)
==4840==  Address 0x522d235 is 0 bytes after a block of size 21 alloc'd
==4840==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4840==    by 0x10971C: parse_arguments (helpers.c:88)
==4840==    by 0x108C38: main (main.c:10)
==4840== 
==4840== Syscall param openat(filename) points to unaddressable byte(s)
==4840==    at 0x4F4BC8E: open (open64.c:47)
==4840==    by 0x4EC8589: _IO_file_open (fileops.c:189)
==4840==    by 0x4EC8589: _IO_file_fopen@@GLIBC_2.2.5 (fileops.c:281)
==4840==    by 0x4EBAEA9: __fopen_internal (iofopen.c:78)
==4840==    by 0x4EBAEA9: fopen@@GLIBC_2.2.5 (iofopen.c:89)
==4840==    by 0x108CB3: main (main.c:23)
==4840==  Address 0x522d235 is 0 bytes after a block of size 21 alloc'd
==4840==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4840==    by 0x10971C: parse_arguments (helpers.c:88)
==4840==    by 0x108C38: main (main.c:10)
==4840== 
==4840== 
==4840== Process terminating with default action of signal 2 (SIGINT)
==4840==    at 0x4F4BC8C: open (open64.c:47)
==4840==    by 0x4EC8589: _IO_file_open (fileops.c:189)
==4840==    by 0x4EC8589: _IO_file_fopen@@GLIBC_2.2.5 (fileops.c:281)
==4840==    by 0x4EBAEA9: __fopen_internal (iofopen.c:78)
==4840==    by 0x4EBAEA9: fopen@@GLIBC_2.2.5 (iofopen.c:89)
==4840==    by 0x108CB3: main (main.c:23)
==4840== 
==4840== HEAP SUMMARY:
==4840==     in use at exit: 789 bytes in 6 blocks
==4840==   total heap usage: 6 allocs, 0 frees, 789 bytes allocated
==4840== 
==4840== 0 bytes in 1 blocks are still reachable in loss record 1 of 6
==4840==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4840==    by 0x10934C: alloc_args (helpers.c:18)
==4840==    by 0x1094B7: parse_arguments (helpers.c:52)
==4840==    by 0x108C38: main (main.c:10)
==4840== 
==4840== 16 bytes in 1 blocks are still reachable in loss record 2 of 6
==4840==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4840==    by 0x108DE4: map_create (hashmap.c:59)
==4840==    by 0x109331: alloc_args (helpers.c:17)
==4840==    by 0x1094B7: parse_arguments (helpers.c:52)
==4840==    by 0x108C38: main (main.c:10)
==4840== 
==4840== 21 bytes in 1 blocks are still reachable in loss record 3 of 6
==4840==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4840==    by 0x10971C: parse_arguments (helpers.c:88)
==4840==    by 0x108C38: main (main.c:10)
==4840== 
==4840== 40 bytes in 1 blocks are still reachable in loss record 4 of 6
==4840==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4840==    by 0x109315: alloc_args (helpers.c:14)
==4840==    by 0x1094B7: parse_arguments (helpers.c:52)
==4840==    by 0x108C38: main (main.c:10)
==4840== 
==4840== 160 bytes in 1 blocks are still reachable in loss record 5 of 6
==4840==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4840==    by 0x108E02: map_create (hashmap.c:61)
==4840==    by 0x109331: alloc_args (helpers.c:17)
==4840==    by 0x1094B7: parse_arguments (helpers.c:52)
==4840==    by 0x108C38: main (main.c:10)
==4840== 
==4840== 552 bytes in 1 blocks are still reachable in loss record 6 of 6
==4840==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4840==    by 0x4EBAE49: __fopen_internal (iofopen.c:65)
==4840==    by 0x4EBAE49: fopen@@GLIBC_2.2.5 (iofopen.c:89)
==4840==    by 0x108CB3: main (main.c:23)
==4840== 
==4840== LEAK SUMMARY:
==4840==    definitely lost: 0 bytes in 0 blocks
==4840==    indirectly lost: 0 bytes in 0 blocks
==4840==      possibly lost: 0 bytes in 0 blocks
==4840==    still reachable: 789 bytes in 6 blocks
==4840==         suppressed: 0 bytes in 0 blocks
==4840== 
==4840== For counts of detected and suppressed errors, rerun with: -v
==4840== Use --track-origins=yes to see where uninitialised values come from
==4840== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
